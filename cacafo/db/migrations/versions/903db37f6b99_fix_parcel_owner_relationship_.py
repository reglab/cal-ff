"""fix parcel owner relationship pluralization

Revision ID: 903db37f6b99
Revises: fd3fcae5965a
Create Date: 2024-09-23 08:44:13.055599

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "903db37f6b99"
down_revision: Union[str, None] = "fd3fcae5965a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "parcel_owner_name_annotation",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_name", sa.String(), nullable=False),
        sa.Column("related_owner_name", sa.String(), nullable=False),
        sa.Column("matched", sa.Boolean(), nullable=False),
        sa.Column("annotated_on", sa.DateTime(), nullable=False),
        sa.Column("annotated_by", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("parcel_owner_name_annotations")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "parcel_owner_name_annotations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("owner_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "related_owner_name", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="parcel_owner_name_annotations_pkey"),
    )
    op.drop_table("parcel_owner_name_annotation")
    # ### end Alembic commands ###
